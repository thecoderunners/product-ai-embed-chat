(function(){"use strict";(function(){if(!document.querySelector('meta[name="viewport"]')){const e=document.createElement("meta");e.name="viewport",e.content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no",document.head.appendChild(e)}const o={info:(...e)=>console.log("üì± [Chat Widget]:",...e),error:(...e)=>console.error("‚ùå [Chat Widget]:",...e),warn:(...e)=>console.warn("‚ö†Ô∏è [Chat Widget]:",...e)};o.info("Initializing chat widget...");const l=document.createElement("div");l.id="my-chat-widget",l.style.position="fixed",l.style.bottom="20px",l.style.right="20px",l.style.zIndex="10000",document.body.appendChild(l),o.info("Chat container created");const h=document.createElement("button");h.className="chat-toggle",h.innerHTML=`
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
    </svg>
  `,l.appendChild(h);const c=document.createElement("div");c.id="my-chat-window",l.appendChild(c),o.info("Chat button and window created");let u=!1;function m(){return window.innerWidth<768}function v(){o.info("Toggling chat window, current state:",u),u?(c.classList.remove("chat-show"),c.classList.add("chat-hide"),c.addEventListener("animationend",()=>{c.style.display="none",u=!1,document.documentElement.classList.remove("chat-open"),document.body.classList.remove("chat-open"),document.body.style.overflow=""},{once:!0})):(c.style.display="block",c.classList.add("chat-show"),c.classList.remove("chat-hide"),u=!0,m()&&(document.documentElement.classList.add("chat-open"),document.body.classList.add("chat-open"),document.body.style.overflow="hidden",setTimeout(()=>{window.scrollTo(0,0)},10)),w())}h.addEventListener("click",v),window.addEventListener("resize",()=>{if(u){const e=document.getElementById("chat-body");e&&(e.style.height=m()?"calc(100% - 120px)":"calc(100% - clamp(120px, 25vh, 140px))")}});function w(){o.info("Loading chat interface..."),fetch("http://localhost:3000/api/chat/init",{method:"GET",credentials:"include"}).then(e=>(o.info("Chat init API response received"),e.json())).then(e=>{c.innerHTML=`
          <div id="chat-header">
            <span>Chat</span>
            <button class="close-button" aria-label="Close chat">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
              </svg>
            </button>
          </div>
          <div id="chat-body"></div>
          <div id="chat-footer">
            <input type="text" id="chat-input" placeholder="Type a message..." />
            <button id="voice-button" title="Voice Input">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path>
                <path d="M19 10v2a7 7 0 0 1-14 0v-2"></path>
                <line x1="12" y1="19" x2="12" y2="23"></line>
                <line x1="8" y1="23" x2="16" y2="23"></line>
              </svg>
            </button>
            <button id="send-message">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="22" y1="2" x2="11" y2="13"></line>
                <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
              </svg>
            </button>
          </div>
        `,c.querySelector(".close-button").addEventListener("click",t=>{t.stopPropagation(),v()}),e.messages&&Array.isArray(e.messages)?e.messages.forEach(t=>{g(t)}):g({type:"text",content:"Hi! How can I help you today?"}),C(),o.info("Chat interface loaded and initialized")}).catch(e=>{o.error("Error loading chat interface:",e),c.innerHTML=`
          <div class="error-state" style="padding:20px; text-align:center; color:#ff4757;">
            <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="12" y1="8" x2="12" y2="12"></line>
              <line x1="12" y1="16" x2="12.01" y2="16"></line>
            </svg>
            <p>Unable to load chat. Please try again later.</p>
          </div>
        `})}function g(e){const n=document.getElementById("chat-body"),t=document.createElement("div");switch(t.className="message server-message",e.type){case"text":t.innerHTML=`
            <div class="message-content">
              ${e.content}
            </div>
          `;break;case"product":const a=e.originalPrice?Math.round((e.originalPrice-e.price)/e.originalPrice*100):0,i=e.rating?k(e.rating):"";t.innerHTML=`
            <div class="product-card">
              <div class="product-image-container">
                <img src="${e.imageUrl}" alt="${e.title}" loading="lazy" />
                ${a>0?`<div class="discount-badge">-${a}%</div>`:""}
              </div>
              <div class="product-details">
                <h4>${e.title}</h4>
                <div class="product-rating">${i}</div>
                <p>${e.description}</p>
                <div class="product-price">
                  <strong>${y(e.price)}</strong>
                  ${e.originalPrice?`<span class="original-price">${y(e.originalPrice)}</span>`:""}
                </div>
                ${e.shipping?`<div class="shipping-info">${e.shipping}</div>`:""}
                ${e.inStock===!1?'<div class="out-of-stock">Out of Stock</div>':""}
              </div>
              <div class="product-actions">
                ${e.actions.map(s=>`
                  ${s.url?`<a href="${s.url}" class="product-action-button" data-action="${s.value}">${s.label}</a>`:`<button class="product-action-button" data-action="${s.value}">${s.label}</button>`}
                `).join("")}
              </div>
            </div>
          `;break;case"action":t.innerHTML=`
          <div class="message-content">
            <p>${e.question}</p>
            <div class="action-buttons">
              ${e.options.map(s=>`<button class="action-button" data-action="${s.value}">${s.label}</button>`).join("")}
            </div>
          </div>
        `;break;case"image":t.innerHTML=`
          <div class="message-content">
            <img src="${e.imageUrl}" alt="Image message" style="max-width:100%; border-radius:8px;" />
            ${e.caption?`<p>${e.caption}</p>`:""}
          </div>
        `;break;default:t.innerHTML='<div class="message-content">Unknown message type.</div>'}n.appendChild(t),n.scrollTop=n.scrollHeight,t.querySelectorAll(".action-button, .product-action-button:not(a)").forEach(a=>{a.addEventListener("click",()=>{const i=a.getAttribute("data-action");o.info("Action button clicked:",i),x({action:i})})})}function k(e){const n=Math.round(e*2)/2;let t="";for(let a=1;a<=Math.floor(n);a++)t+='<span class="star full">‚òÖ</span>';n%1!==0&&(t+='<span class="star half">‚òÖ</span>');const p=5-Math.ceil(n);for(let a=0;a<p;a++)t+='<span class="star empty">‚òÜ</span>';return`<div class="stars">${t}</div><span class="rating-value">${e.toFixed(1)}</span>`}function y(e){return`$${e.toFixed(2)}`}const E=`
  /* Product Card Enhancements */
  .product-card {
    border: 1px solid #e1e1e1;
    border-radius: 16px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background: #fff;
    width: 100%;
    margin-bottom: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
  
  .product-card:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }
  
  .product-image-container {
    position: relative;
    width: 100%;
  }
  
  .product-card img {
    width: 100%;
    height: auto;
    max-height: 200px;
    object-fit: cover;
    border-bottom: 1px solid #f0f0f0;
  }
  
  @media (max-width: 767px) {
    .product-card img {
      max-height: 180px;
    }
  }
  
  .discount-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background: #e74c3c;
    color: white;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: bold;
  }
  
  .product-details {
    padding: 12px;
  }
  
  .product-details h4 {
    margin: 0 0 8px 0;
    font-size: 16px;
    color: #333;
  }
  
  .product-details p {
    margin: 8px 0;
    color: #666;
    font-size: 14px;
    line-height: 1.4;
  }
  
  .product-rating {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
  }
  
  .stars {
    display: inline-flex;
    margin-right: 6px;
  }
  
  .star {
    color: #f39c12;
    font-size: 14px;
  }
  
  .star.empty {
    color: #e1e1e1;
  }
  
  .star.half {
    position: relative;
    color: #e1e1e1;
  }
  
  .star.half:before {
    content: '‚òÖ';
    position: absolute;
    color: #f39c12;
    width: 50%;
    overflow: hidden;
  }
  
  .rating-value {
    font-size: 14px;
    color: #666;
  }
  
  .product-price {
    display: flex;
    align-items: center;
    margin: 10px 0;
  }
  
  .product-price strong {
    font-size: 18px;
    color: #2ecc71;
    margin-right: 8px;
  }
  
  .original-price {
    text-decoration: line-through;
    color: #999;
    font-size: 14px;
  }
  
  .shipping-info {
    font-size: 12px;
    color: #3498db;
    margin-top: 4px;
  }
  
  .out-of-stock {
    display: inline-block;
    padding: 2px 6px;
    background: #f1f1f1;
    color: #e74c3c;
    font-size: 12px;
    border-radius: 4px;
    margin-top: 4px;
  }
  
  .product-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    padding: 8px 12px 16px;
    justify-content: center;
  }
  
  .product-action-button {
    background: #6c5ce7;
    color: white;
    border: none;
    border-radius: 20px;
    padding: 8px 16px;
    cursor: pointer;
    transition: background 0.2s ease, transform 0.1s ease;
    font-size: 14px;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  .product-action-button:hover {
    background: #5b4cc4;
    transform: scale(1.05);
  }
  
  .product-action-button:active {
    transform: scale(0.95);
  }

  /* Special styling for Buy Now button */
  .product-action-button[data-action^="buy_"] {
    background: #2ecc71;
  }
  
  .product-action-button[data-action^="buy_"]:hover {
    background: #27ae60;
  }
  
  /* Different color for View Details button */
  .product-action-button[data-action^="details_"] {
    background: #3498db;
  }
  
  .product-action-button[data-action^="details_"]:hover {
    background: #2980b9;
  }
  
  @media (max-width: 767px) {
    .product-actions {
      flex-direction: column;
    }
    
    .product-action-button {
      width: 100%;
    }
  }
`;function $(){const e=document.createElement("style");e.textContent=E,document.head.appendChild(e)}function x(e){o.info("Sending message payload to server:",e),fetch("http://localhost:3000/api/chat/message",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(n=>(o.info("Server response received"),n.json())).then(n=>{o.info("Processing server response:",n);const t=document.getElementById("chat-body");n.messages&&Array.isArray(n.messages)&&n.messages.forEach(p=>{g(p)}),t.scrollTop=t.scrollHeight}).catch(n=>{o.error("Error in server communication:",n);const t=document.getElementById("chat-body");g({type:"text",content:"Sorry, I couldn't process your message. Please try again."}),t.scrollTop=t.scrollHeight})}function C(){const e=document.getElementById("send-message"),n=document.getElementById("voice-button"),t=document.getElementById("chat-input"),p=document.getElementById("chat-body");o.info("Setting up chat messaging components");let a=!1,i=null;function s(r){return r.replace(/[<>]/g,"").trim()}function f(){const r=s(t.value);r!==""&&(o.info("Sending message:",r),L(r),t.value="",p.scrollTop=p.scrollHeight,x({message:r}))}function L(r){const d=document.createElement("div");d.className="message user-message",d.innerHTML=`<div class="message-content">${r}</div>`,p.appendChild(d),o.info("User message appended to chat")}e.addEventListener("click",f),t.addEventListener("keyup",function(r){r.key==="Enter"&&!r.shiftKey&&(r.preventDefault(),f())}),n.addEventListener("click",function(){if(!("webkitSpeechRecognition"in window)&&!("SpeechRecognition"in window)){o.warn("Speech recognition not supported in this browser"),alert("Voice recognition is not supported in your browser.");return}if(a){o.info("Stopping voice recording"),i&&i.stop();return}const r=window.SpeechRecognition||window.webkitSpeechRecognition;i=new r,i.continuous=!1,i.interimResults=!0,i.lang="en-US",i.onstart=()=>{o.info("Voice recognition started"),a=!0,n.classList.add("recording")},i.onend=()=>{o.info("Voice recognition ended"),a=!1,n.classList.remove("recording"),i=null},i.onerror=d=>{o.error("Voice recognition error:",d.error),a=!1,n.classList.remove("recording"),i=null},i.onresult=d=>{const b=Array.from(d.results).map(S=>S[0].transcript).join("");o.info("Voice recognition result:",b),t.value=b,d.results[0].isFinal&&f()};try{i.start(),o.info("Attempting to start voice recognition")}catch(d){o.error("Error starting voice recognition:",d),alert("Error starting voice recognition. Please try again.")}}),t.focus(),o.info("Chat messaging setup completed")}$(),o.info("Chat widget initialized")})()})();
