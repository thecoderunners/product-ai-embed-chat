(function(){"use strict";({})?Promise.resolve().then(()=>L).then(g=>{const s=g.default,v=document.createElement("style");v.textContent=s,document.head.appendChild(v)}):fetch("/src/styles.css").then(g=>g.text()).then(g=>{const s=document.createElement("style");s.textContent=g,document.head.appendChild(s)}).catch(g=>console.warn("Could not load styles:",g)),function(){function g(){const t=document.currentScript;if(t&&t.getAttribute("data-api-key"))return t.getAttribute("data-api-key");const e=document.querySelectorAll('script[type="module"]');for(const o of e)if(o.getAttribute("data-api-key")&&(o.src.includes("chat-widget")||o.src.includes("script.js")))return o.getAttribute("data-api-key");const n=document.querySelector("script[data-api-key]");return n?n.getAttribute("data-api-key"):(console.warn("Could not find API key from script tag"),null)}if(!document.querySelector('meta[name="viewport"]')){const t=document.createElement("meta");t.name="viewport",t.content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no",document.head.appendChild(t)}const s={info:(...t)=>console.log("📱 [Chat Widget]:",...t),error:(...t)=>console.error("❌ [Chat Widget]:",...t),warn:(...t)=>console.warn("⚠️ [Chat Widget]:",...t)};class v{constructor(){this.enabled=localStorage.getItem("chatSoundEnabled")!=="false",this.audioContext=null,this.initAudioContext()}initAudioContext(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext)}catch(e){s.warn("Audio context not supported:",e)}}async resumeAudioContext(){this.audioContext&&this.audioContext.state==="suspended"&&await this.audioContext.resume()}playNotificationSound(e="message"){!this.enabled||!this.audioContext||this.resumeAudioContext().then(()=>{const n=this.audioContext.createOscillator(),o=this.audioContext.createGain();n.connect(o),o.connect(this.audioContext.destination);const r={message:[800,600],error:[400],success:[900,700,500]},a=r[e]||r.message;let i=this.audioContext.currentTime;a.forEach((l,h)=>{const c=this.audioContext.createOscillator(),d=this.audioContext.createGain();c.connect(d),d.connect(this.audioContext.destination),c.frequency.value=l,c.type="sine",d.gain.setValueAtTime(0,i),d.gain.linearRampToValueAtTime(.1,i+.05),d.gain.linearRampToValueAtTime(0,i+.2),c.start(i),c.stop(i+.2),i+=.15})}).catch(n=>s.warn("Error playing sound:",n))}toggle(){return this.enabled=!this.enabled,localStorage.setItem("chatSoundEnabled",this.enabled.toString()),this.enabled}isEnabled(){return this.enabled}}const b=new v;function E(t=new Date){const e=new Date,n=Math.floor((e-t)/(1e3*60));return n<1?"Just now":n<60?`${n}m ago`:n<1440?`${Math.floor(n/60)}h ago`:t.toLocaleDateString()===e.toLocaleDateString()?t.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}):t.toLocaleDateString([],{month:"short",day:"numeric"})}s.info("Initializing chat widget...");const m=document.createElement("div");m.id="my-chat-widget",m.style.position="fixed",m.style.bottom="20px",m.style.right="20px",m.style.zIndex="10000",document.body.appendChild(m),s.info("Chat container created");const u=document.createElement("button");u.className="chat-toggle",u.setAttribute("aria-label","Open chat"),u.setAttribute("aria-expanded","false"),u.setAttribute("tabindex","0"),u.innerHTML=`
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
      <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
    </svg>
  `,m.appendChild(u);const p=document.createElement("div");p.id="my-chat-window",p.setAttribute("role","dialog"),p.setAttribute("aria-label","Chat conversation"),p.setAttribute("aria-modal","true"),p.setAttribute("tabindex","-1"),m.appendChild(p);const y=document.createElement("div");y.setAttribute("aria-live","polite"),y.setAttribute("aria-atomic","true"),y.className="sr-only",y.id="chat-live-region",document.body.appendChild(y),s.info("Chat button and window created"),g();const k=g(),T=!k||k==="demo"||window.location.protocol==="file:";function M(t){const e=["Thanks for your message! This is a demo response.","I understand you're interested in our products. How can I help you today?","That's a great question! In demo mode, I can show you how the chat works.","This chat widget supports rich responses, typing indicators, and sound notifications!"];return e[Math.floor(Math.random()*e.length)]}let f=!1;function $(){return window.innerWidth<768}function C(){s.info("Toggling chat window, current state:",f),f?(p.classList.remove("chat-show"),p.classList.add("chat-hide"),u.setAttribute("aria-expanded","false"),u.setAttribute("aria-label","Open chat"),p.addEventListener("animationend",()=>{p.style.display="none",f=!1,document.documentElement.classList.remove("chat-open"),document.body.classList.remove("chat-open"),document.body.style.overflow="",u.focus()},{once:!0})):(p.style.display="block",p.classList.add("chat-show"),p.classList.remove("chat-hide"),f=!0,u.setAttribute("aria-expanded","true"),u.setAttribute("aria-label","Close chat"),$()&&(document.documentElement.classList.add("chat-open"),document.body.classList.add("chat-open"),document.body.style.overflow="hidden",setTimeout(()=>{window.scrollTo(0,0)},10)),B(),setTimeout(()=>{const t=document.getElementById("chat-input");t&&t.focus()},300))}u.addEventListener("click",C),window.addEventListener("resize",()=>{if(f){const t=document.getElementById("chat-body");t&&(t.style.height=$()?"calc(100% - 120px)":"calc(100% - clamp(120px, 25vh, 140px))")}});function B(){s.info("Loading chat interface..."),H()}function H(){p.innerHTML=`
      <header id="chat-header" role="banner">
        <h1 id="chat-title">Chat</h1>
        <div class="header-controls">
          <button class="sound-toggle" aria-label="Toggle sound notifications" title="${b.isEnabled()?"Mute notifications":"Enable sound notifications"}">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
              ${b.isEnabled()?'<path d="M11 5L6 9H2v6h4l5 4V5z"></path><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>':'<path d="M11 5L6 9H2v6h4l5 4V5z"></path><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line>'}
            </svg>
          </button>
          <button class="close-button" aria-label="Close chat">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
              <line x1="18" y1="6" x2="6" y2="18"></line>
              <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
          </button>
        </div>
      </header>
      <main id="chat-body" role="log" aria-live="polite" aria-label="Chat messages" tabindex="0"></main>
      <footer id="chat-footer" role="form">
        <label for="chat-input" class="sr-only">Type your message</label>
        <input type="text" id="chat-input" placeholder="Type a message..." aria-describedby="chat-input-hint" autocomplete="off" />
        <div id="chat-input-hint" class="sr-only">Press Enter to send message, or use voice input button</div>
        <button id="voice-button" aria-label="Start voice input" title="Voice Input">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
            <path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path>
            <path d="M19 10v2a7 7 0 0 1-14 0v-2"></path>
            <line x1="12" y1="19" x2="12" y2="23"></line>
            <line x1="8" y1="23" x2="16" y2="23"></line>
          </svg>
        </button>
        <button id="send-message" aria-label="Send message">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
            <line x1="22" y1="2" x2="11" y2="13"></line>
            <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
          </svg>
        </button>
      </footer>
    `,p.querySelector(".close-button").addEventListener("click",o=>{o.stopPropagation(),C()});const e=p.querySelector(".sound-toggle");e.addEventListener("click",o=>{o.stopPropagation();const r=b.toggle();e.setAttribute("title",r?"Mute notifications":"Enable sound notifications"),e.innerHTML=`
        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          ${r?'<path d="M11 5L6 9H2v6h4l5 4V5z"></path><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>':'<path d="M11 5L6 9H2v6h4l5 4V5z"></path><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line>'}
        </svg>
      `,r&&b.playNotificationSound("success")}),x({type:"text",content:T?"Hi! Welcome to the chat widget demo. Try sending a message to see it in action!":"Hi! How can I help you today?"}),q(),R(),s.info("Chat interface loaded and initialized")}function I(){const t=document.getElementById("chat-body"),e=t.querySelector(".typing-indicator");e&&e.remove();const n=document.createElement("div");n.className="message server-message typing-indicator",n.innerHTML=`
      <div class="message-content">
        <div class="typing-dots">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </div>
    `,t.appendChild(n),t.scrollTop=t.scrollHeight}function P(){const e=document.getElementById("chat-body").querySelector(".typing-indicator");e&&e.remove()}function x(t){const e=document.getElementById("chat-body");P();const n=document.createElement("div");n.className="message server-message";const o=new Date;switch(t.type){case"text":n.innerHTML=`
            <div class="message-content">
              ${t.content}
            </div>
          `;break;case"product":const i=t.originalPrice?Math.round((t.originalPrice-t.price)/t.originalPrice*100):0,l=t.rating?_(t.rating):"";n.innerHTML=`
            <div class="product-card">
              <div class="product-image-container">
                <img src="${t.imageUrl}" alt="${t.title}" loading="lazy" />
                ${i>0?`<div class="discount-badge">-${i}%</div>`:""}
              </div>
              <div class="product-details">
                <h4>${t.title}</h4>
                <div class="product-rating">${l}</div>
                <p>${t.description}</p>
                <div class="product-price">
                  <strong>${z(t.price)}</strong>
                  ${t.originalPrice?`<span class="original-price">${z(t.originalPrice)}</span>`:""}
                </div>
                ${t.shipping?`<div class="shipping-info">${t.shipping}</div>`:""}
                ${t.inStock===!1?'<div class="out-of-stock">Out of Stock</div>':""}
              </div>
              <div class="product-actions">
                ${t.actions.map(h=>`
                  ${h.url?`<a href="${h.url}" class="product-action-button" data-action="${h.value}">${h.label}</a>`:`<button class="product-action-button" data-action="${h.value}">${h.label}</button>`}
                `).join("")}
              </div>
            </div>
          `;break;case"action":n.innerHTML=`
          <div class="message-content">
            <p>${t.question}</p>
            <div class="action-buttons">
              ${t.options.map(h=>`<button class="action-button" data-action="${h.value}">${h.label}</button>`).join("")}
            </div>
          </div>
        `;break;case"image":n.innerHTML=`
          <div class="message-content">
            <img src="${t.imageUrl}" alt="Image message" style="max-width:100%; border-radius:8px;" />
            ${t.caption?`<p>${t.caption}</p>`:""}
          </div>
        `;break;default:n.innerHTML=`<div class="message-content">${t}</div>`}const r=n.innerHTML;n.innerHTML=`
      ${r}
      <div class="message-timestamp" title="${o.toLocaleString()}">
        ${E(o)}
      </div>
    `,e.appendChild(n),e.scrollTop=e.scrollHeight,t.type&&!n.classList.contains("typing-indicator")&&b.playNotificationSound(t.type==="text"?"message":"success"),t.type==="text"?A(`New message: ${t.content.replace(/<[^>]*>/g,"")}`):t.type==="product"&&A(`Product suggestion: ${t.title}`),n.querySelectorAll(".action-button, .product-action-button:not(a)").forEach(i=>{i.addEventListener("click",()=>{const l=i.getAttribute("data-action");s.info("Action button clicked:",l),I(),S({action:l})})})}function _(t){const e=Math.round(t*2)/2;let n="";for(let r=1;r<=Math.floor(e);r++)n+='<span class="star full">★</span>';e%1!==0&&(n+='<span class="star half">★</span>');const o=5-Math.ceil(e);for(let r=0;r<o;r++)n+='<span class="star empty">☆</span>';return`<div class="stars">${n}</div><span class="rating-value">${t.toFixed(1)}</span>`}function z(t){return`$${t.toFixed(2)}`}function S(t,e=null){s.info("Sending message payload to server:",t),window.chatUserIdentifier||(window.chatUserIdentifier="user-"+Math.random().toString(36).substring(2,15),s.info("Generated user identifier:",window.chatUserIdentifier));const n={token:k,message:t.message,userIdentifier:window.chatUserIdentifier};if(T){s.info("Running in demo mode - simulating server response"),setTimeout(()=>{if(e){const i=e.querySelector(".message-status");i&&(i.setAttribute("data-status","sent"),i.innerHTML=`
              <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="9,11 12,14 22,4"></polyline>
              </svg>
            `)}const r={message:M(t.message||"")}.message.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/\n/g,"<br>");x({type:"text",content:r});const a=document.getElementById("chat-body");a.scrollTop=a.scrollHeight},1e3+Math.random()*1e3);return}fetch("http://localhost:5173/api/chat",{method:"POST",headers:{"Content-Type":"application/json",Origin:"http://localhost:8080"},body:JSON.stringify(n)}).then(o=>(s.info("Server response received",o.status),o.ok?o.json():o.json().then(r=>{throw new Error(JSON.stringify({status:o.status,data:r}))}).catch(()=>{throw new Error(JSON.stringify({status:o.status,data:{error:"Unknown error"}}))}))).then(o=>{if(s.info("Processing server response:",o),e){const a=e.querySelector(".message-status");a&&(a.setAttribute("data-status","sent"),a.innerHTML=`
              <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="9,11 12,14 22,4"></polyline>
              </svg>
            `)}if(o.success&&o.message){const a=o.message.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/\n/g,"<br>");x({type:"text",content:a})}else o.messages&&Array.isArray(o.messages)?o.messages.forEach(a=>{x(a)}):x({type:"text",content:"Received response from server but in an unexpected format."});const r=document.getElementById("chat-body");r.scrollTop=r.scrollHeight}).catch(o=>{s.error("Error in server communication:",o);const r=document.getElementById("chat-body");if(e){const i=e.querySelector(".message-status");i&&(i.setAttribute("data-status","error"),i.innerHTML=`
              <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <line x1="12" y1="8" x2="12" y2="12"></line>
                <line x1="12" y1="16" x2="12.01" y2="16"></line>
              </svg>
            `,i.style.cursor="pointer",i.title="Click to retry",i.onclick=()=>{i.setAttribute("data-status","sending"),i.innerHTML=`
                <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="10"></circle>
                </svg>
              `,i.style.cursor="default",i.title="",i.onclick=null;const l=e.querySelector(".message-content").textContent.replace(/\s*$/,"");S({message:l},e)})}let a="Sorry, I couldn't process your message. Please try again.";try{const i=JSON.parse(o.message);if(i.status===401){const l=i.data;l&&l.error?l.error.includes("Invalid API token")||l.error.includes("unauthorized")?a="🔒 Authentication failed. Please check your API key configuration.":a=`❌ Authentication error: ${l.error}`:a="🔒 Unauthorized access. Please check your API key."}else i.status===403?a="🚫 Access forbidden. Please check your permissions.":i.status===500?a="⚠️ Server error. Please try again later.":i.data&&i.data.error&&(a=`❌ Error: ${i.data.error}`)}catch{o.message&&!o.message.includes("fetch")&&(a=`❌ ${o.message}`)}x({type:"text",content:a}),r.scrollTop=r.scrollHeight})}function R(){const t=document.getElementById("send-message"),e=document.getElementById("voice-button"),n=document.getElementById("chat-input"),o=document.getElementById("chat-body");s.info("Setting up chat messaging components");let r=!1,a=null;function i(c){return c.replace(/[<>]/g,"").trim()}function l(){const c=i(n.value);if(c==="")return;s.info("Sending message:",c);const d=h(c);n.value="",o.scrollTop=o.scrollHeight,setTimeout(()=>{I()},500),S({message:c},d)}function h(c){const d=document.createElement("div");d.className="message user-message";const w=new Date;return d.innerHTML=`
        <div class="message-content">
          ${c}
          <div class="message-status" data-status="sending">
            <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"></circle>
            </svg>
          </div>
        </div>
        <div class="message-timestamp" title="${w.toLocaleString()}">
          ${E(w)}
        </div>
      `,o.appendChild(d),s.info("User message appended to chat"),d}t.addEventListener("click",l),n.addEventListener("keyup",function(c){c.key==="Enter"&&!c.shiftKey&&(c.preventDefault(),l())}),e.addEventListener("click",function(){if(!("webkitSpeechRecognition"in window)&&!("SpeechRecognition"in window)){s.warn("Speech recognition not supported in this browser"),alert("Voice recognition is not supported in your browser.");return}if(r){s.info("Stopping voice recording"),a&&a.stop();return}const c=window.SpeechRecognition||window.webkitSpeechRecognition;a=new c,a.continuous=!1,a.interimResults=!0,a.lang="en-US",a.onstart=()=>{s.info("Voice recognition started"),r=!0,e.classList.add("recording")},a.onend=()=>{s.info("Voice recognition ended"),r=!1,e.classList.remove("recording"),a=null},a.onerror=d=>{s.error("Voice recognition error:",d.error),r=!1,e.classList.remove("recording"),a=null},a.onresult=d=>{const w=Array.from(d.results).map(j=>j[0].transcript).join("");s.info("Voice recognition result:",w),n.value=w,d.results[0].isFinal&&l()};try{a.start(),s.info("Attempting to start voice recognition")}catch(d){s.error("Error starting voice recognition:",d),alert("Error starting voice recognition. Please try again.")}}),n.focus(),s.info("Chat messaging setup completed")}function q(){document.addEventListener("keydown",t=>{if(f&&(t.key==="Escape"&&(t.preventDefault(),C()),t.key==="Tab")){const e=p.querySelectorAll('button, input, [tabindex]:not([tabindex="-1"])'),n=e[0],o=e[e.length-1];t.shiftKey&&document.activeElement===n?(t.preventDefault(),o.focus()):!t.shiftKey&&document.activeElement===o&&(t.preventDefault(),n.focus())}})}function A(t){const e=document.getElementById("chat-live-region");e&&(e.textContent=t,setTimeout(()=>{e.textContent=""},1e3))}s.info("Chat widget initialized")}();const L=Object.freeze(Object.defineProperty({__proto__:null,default:'#my-chat-widget *{box-sizing:border-box;font-family:Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,sans-serif}.sr-only{position:absolute!important;width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}*:focus{outline:2px solid #6c5ce7;outline-offset:2px}@media (prefers-contrast: high){#my-chat-widget{filter:contrast(150%)}}@media (prefers-reduced-motion: reduce){*,*:before,*:after{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important}}#my-chat-widget button.chat-toggle{background:#6c5ce7;color:#fff;border:none;border-radius:50%;width:clamp(60px,15vw,80px);height:clamp(60px,15vw,80px);font-size:clamp(24px,4vw,32px);cursor:pointer;box-shadow:0 4px 12px #6c5ce766;transition:all .3s cubic-bezier(.4,0,.2,1);display:flex;align-items:center;justify-content:center;z-index:10001;position:relative}#my-chat-widget button.chat-toggle:hover{transform:scale(1.05);box-shadow:0 6px 16px #6c5ce780}#my-chat-widget button.chat-toggle:active{transform:scale(.95)}@media (max-width: 767px){#my-chat-widget button.chat-toggle{width:80px;height:80px;font-size:32px;position:fixed;bottom:20px;right:20px}}#my-chat-window{display:none;width:min(450px,calc(100vw - 40px));height:min(650px,80vh);background:#fff;border-radius:24px;overflow:hidden;position:fixed;bottom:100px;right:20px;box-shadow:0 12px 28px #00000026;z-index:10002;transition:all .3s ease}@media (max-width: 767px){#my-chat-window{width:100%;height:100%;bottom:0;right:0;left:0;top:0;border-radius:0;max-height:none;position:fixed;margin:0;padding:0}#my-chat-window.chat-show{animation:slideUpFullScreen .3s cubic-bezier(.4,0,.2,1) forwards}#my-chat-window.chat-hide{animation:slideDownFullScreen .3s cubic-bezier(.4,0,.2,1) forwards}}@media (min-width: 768px) and (max-width: 1023px){#my-chat-window{width:min(600px,85vw);height:min(700px,85vh)}}@media (min-width: 1024px){#my-chat-window{width:min(450px,35vw);height:min(650px,75vh)}}.chat-show{display:block!important;animation:slideUp .3s cubic-bezier(.4,0,.2,1) forwards}.chat-hide{animation:slideDown .3s cubic-bezier(.4,0,.2,1) forwards}@keyframes slideUp{0%{opacity:0;transform:translateY(20px) scale(.98)}to{opacity:1;transform:translateY(0) scale(1)}}@keyframes slideDown{0%{opacity:1;transform:translateY(0) scale(1)}to{opacity:0;transform:translateY(20px) scale(.98)}}@keyframes slideUpFullScreen{0%{opacity:0;transform:translateY(20px)}to{opacity:1;transform:translateY(0)}}@keyframes slideDownFullScreen{0%{opacity:1;transform:translateY(0)}to{opacity:0;transform:translateY(20px)}}@media (max-width: 767px){html.chat-open,body.chat-open{overflow:hidden!important;position:fixed;width:100%;height:100%}}#chat-header{background:#6c5ce7;color:#fff;padding:clamp(16px,5vw,20px);font-size:clamp(16px,4vw,18px);font-weight:600;display:flex;justify-content:space-between;align-items:center}#chat-title{margin:0;font-size:inherit;font-weight:inherit}.header-controls{display:flex;align-items:center;gap:8px}@media (max-width: 767px){#chat-header{padding:1rem;position:sticky;top:0;z-index:10003;box-shadow:0 2px 8px #0000001a;font-size:20px}}.close-button,.sound-toggle{background:none;border:none;color:#fff;cursor:pointer;padding:clamp(6px,1.5vw,8px);display:flex;align-items:center;justify-content:center;border-radius:50%;transition:background-color .2s,transform .1s;min-width:36px;min-height:36px}.close-button:hover,.sound-toggle:hover{background:#ffffff1a;transform:scale(1.05)}.close-button:active,.sound-toggle:active{transform:scale(.95)}.close-button svg{width:clamp(18px,5vw,20px);height:clamp(18px,5vw,20px)}.sound-toggle svg{width:18px;height:18px}.sound-toggle{opacity:.8}.sound-toggle:hover{opacity:1}#chat-body{padding:clamp(16px,5vw,20px);overflow-y:auto;height:calc(100% - clamp(120px,25vh,140px));background:#f8f9fa;scroll-behavior:smooth}@media (max-width: 767px){#chat-body{height:calc(100vh - 130px);padding:1rem;-webkit-overflow-scrolling:touch}}.message{display:flex;flex-direction:column;margin-bottom:16px;animation:messageFadeIn .3s ease forwards;opacity:0;gap:4px}@keyframes messageFadeIn{to{opacity:1;transform:translateY(0)}}.message-content{max-width:85%;padding:clamp(10px,3vw,16px);border-radius:16px;font-size:clamp(14px,4vw,16px);line-height:1.5;position:relative;word-wrap:break-word}@media (max-width: 767px){.message-content{max-width:90%;font-size:1rem}}.server-message .message-content{background:#fff;box-shadow:0 2px 4px #0000000f;border-bottom-left-radius:4px;margin-right:auto}.user-message{align-items:flex-end}.user-message .message-content{order:1}.user-message .message-timestamp{order:2;text-align:right}.user-message .message-content{background:#6c5ce7;color:#fff;border-bottom-right-radius:4px;display:flex;align-items:flex-end;justify-content:space-between;gap:8px}.message-status{flex-shrink:0;opacity:.7;transition:opacity .2s;margin-left:8px;align-self:flex-end}.message-status[data-status=sending]{animation:spin 1s linear infinite}.message-status[data-status=sent]{opacity:.8}.message-status[data-status=error]{opacity:1;color:#ff6b6b}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.typing-indicator{opacity:.8}.typing-dots{display:flex;align-items:center;gap:4px;padding:4px 0}.typing-dots span{width:8px;height:8px;border-radius:50%;background:#6c5ce7;animation:typingDots 1.4s ease-in-out infinite}.typing-dots span:nth-child(1){animation-delay:0s}.typing-dots span:nth-child(2){animation-delay:.2s}.typing-dots span:nth-child(3){animation-delay:.4s}@keyframes typingDots{0%,60%,to{transform:translateY(0);opacity:.4}30%{transform:translateY(-10px);opacity:1}}.message-timestamp{font-size:11px;color:#00000080;margin-top:2px;font-weight:400;-webkit-user-select:none;user-select:none;pointer-events:none}.user-message .message-timestamp{color:#ffffffb3}@media (max-width: 767px){.message-timestamp{font-size:10px}}@media (prefers-color-scheme: dark){.message-timestamp{color:#ffffff80}.user-message .message-timestamp{color:#ffffffb3}}#chat-footer{padding:clamp(12px,4vw,16px);background:#fff;display:flex;gap:clamp(8px,2vw,12px);align-items:center;border-top:1px solid rgba(0,0,0,.06);position:absolute;bottom:0;left:0;right:0;height:clamp(70px,10vh,80px);box-sizing:border-box}@media (max-width: 767px){#chat-footer{padding:12px;gap:12px;height:70px;position:fixed;bottom:0;left:0;right:0;width:100%;box-shadow:0 -2px 10px #0000000d}}#chat-input{flex:1;padding:clamp(10px,3vw,12px) clamp(12px,4vw,16px);border:1px solid #e1e1e1;border-radius:20px;outline:none;font-size:clamp(14px,4vw,15px);line-height:1.5;background:#f8f9fa;transition:border-color .2s ease,box-shadow .2s ease}#chat-input:focus{border-color:#6c5ce7;box-shadow:0 0 0 3px #6c5ce71f}#chat-footer button{background:#6c5ce7;color:#fff;border:none;border-radius:50%;width:clamp(36px,10vw,44px);height:clamp(36px,10vw,44px);padding:0;cursor:pointer;transition:all .2s cubic-bezier(.4,0,.2,1);display:flex;align-items:center;justify-content:center;flex-shrink:0}#chat-footer button svg{width:clamp(16px,5vw,20px);height:clamp(16px,5vw,20px)}@media (max-width: 767px){#chat-footer button{width:48px;height:48px}#chat-footer button svg{width:24px;height:24px}}#chat-footer button:hover{background:#5b4cc4;transform:scale(1.05)}#chat-footer button:active{transform:scale(.95)}#voice-button.recording{animation:pulseRecording 1.5s ease infinite}@keyframes pulseRecording{0%{transform:scale(1);background:#ff4757}50%{transform:scale(1.1);background:#ff6b81}to{transform:scale(1);background:#ff4757}}.product-card img{width:100%;height:auto;max-height:35vh;object-fit:cover}@media (max-width: 767px){.product-card img{max-height:30vh}}.product-details{padding:12px;padding:clamp(10px,3vw,12px)}.product-details h4{margin:8px 0;font-size:clamp(14px,4vw,16px)}.product-details p{margin:8px 0;color:#666;font-size:clamp(12px,3.5vw,14px)}.product-details strong{display:block;margin:8px 0;font-size:clamp(16px,4.5vw,18px);color:#6c5ce7}.action-buttons{display:flex;flex-wrap:wrap;gap:8px;margin-top:8px}.action-button,.product-action-button{background:#6c5ce7;color:#fff;border:none;border-radius:20px;padding:clamp(6px,2vw,8px) clamp(10px,3vw,12px);cursor:pointer;transition:background .2s ease;font-size:clamp(12px,3.5vw,14px);white-space:nowrap}.action-button:hover,.product-action-button:hover{background:#5b4cc4}@media (prefers-color-scheme: dark){#my-chat-window{background:#1a1a1a}#chat-body{background:#262626}#chat-footer,.server-message .message-content{background:#333;color:#fff}#chat-input{background:#444;color:#fff;border-color:#555}.product-card{background:#333}.product-details p{color:#ccc}}.product-card{border:1px solid #e1e1e1;border-radius:16px;overflow:hidden;display:flex;flex-direction:column;background:#fff;width:100%;max-width:100%;margin-bottom:8px;box-shadow:0 2px 8px #0000000d;transition:transform .2s ease,box-shadow .2s ease}.product-card:hover{box-shadow:0 4px 12px #0000001a;transform:translateY(-2px)}.product-image-container{position:relative;width:100%}.product-card img{width:100%;height:auto;max-height:200px;object-fit:cover;border-bottom:1px solid #f0f0f0}@media (max-width: 767px){.product-card img{max-height:180px}}.discount-badge{position:absolute;top:10px;right:10px;background:#e74c3c;color:#fff;padding:4px 8px;border-radius:12px;font-size:12px;font-weight:700}.product-details h4{margin:0 0 8px;font-size:16px;color:#333}.product-details p{margin:8px 0;color:#666;font-size:14px;line-height:1.4}.product-rating{display:flex;align-items:center;margin-bottom:8px}.stars{display:inline-flex;margin-right:6px}.star{color:#f39c12;font-size:14px}.star.empty{color:#e1e1e1}.star.half{position:relative;color:#e1e1e1}.star.half:before{content:"★";position:absolute;color:#f39c12;width:50%;overflow:hidden}.rating-value{font-size:14px;color:#666}.product-price{display:flex;align-items:center;margin:10px 0}.product-price strong{font-size:18px;color:#2ecc71;margin-right:8px}.original-price{text-decoration:line-through;color:#999;font-size:14px}.shipping-info{font-size:12px;color:#3498db;margin-top:4px}.out-of-stock{display:inline-block;padding:2px 6px;background:#f1f1f1;color:#e74c3c;font-size:12px;border-radius:4px;margin-top:4px}.product-actions{display:flex;flex-wrap:wrap;gap:8px;padding:clamp(10px,3vw,12px);justify-content:flex-end}.product-action-button{background:#6c5ce7;color:#fff;border:none;border-radius:20px;padding:8px 16px;cursor:pointer;transition:background .2s ease,transform .1s ease;font-size:14px;text-decoration:none;display:inline-flex;align-items:center;justify-content:center}.product-action-button:hover{background:#5b4cc4;transform:scale(1.05)}.product-action-button:active{transform:scale(.95)}.product-action-button[data-action^=buy_]{background:#2ecc71}.product-action-button[data-action^=buy_]:hover{background:#27ae60}.product-action-button[data-action^=details_]{background:#3498db}.product-action-button[data-action^=details_]:hover{background:#2980b9}@media (max-width: 767px){.product-actions{flex-direction:column}.product-action-button{width:100%}}'},Symbol.toStringTag,{value:"Module"}))})();
