const{isArray:bG}=Array;(function(){if(!document.querySelector('meta[name="viewport"]')){var a=document.createElement('meta');a.name='viewport';a.content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';document.head.appendChild(a)}var b=!0,c={info:(...B)=>b&&console.log('📱 [Chat Widget]:',...B),error:(...C)=>b&&console.error('❌ [Chat Widget]:',...C),warn:(..._a)=>b&&console.warn('⚠️ [Chat Widget]:',..._a)},A=document.createElement('link'),g=document.createElement('div');c.info('Initializing chat widget...');var d=document.createElement('div');d.id='my-chat-widget';d.style.position='fixed';d.style.bottom=d.style.right='20px';d.style.zIndex='10000';document.body.appendChild(d);c.info('Chat container created');A.rel='stylesheet';A.href='./styles.css';document.head.appendChild(A);A.onload=()=>c.info('CSS file loaded successfully');A.onerror=()=>c.error('Failed to load CSS file');var f=document.createElement('button');f.className='chat-toggle';f.innerHTML=`
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
    </svg>
  `;d.appendChild(f);g.id='my-chat-window';d.appendChild(g);c.info('Chat button and window created');let h=!1;function _(){return window.innerWidth<768}function j(){c.info('Toggling chat window, current state:',h);if(!h){g.style.display='block';g.classList.add('chat-show');g.classList.remove('chat-hide');h=!0;_()&&(document.documentElement.classList.add('chat-open'),document.body.classList.add('chat-open'),document.body.style.overflow='hidden',setTimeout(()=>window.scrollTo(0,0),10));k()}else{g.classList.remove('chat-show');g.classList.add('chat-hide');g.addEventListener('animationend',()=>{g.style.display='none';h=!1;document.documentElement.classList.remove('chat-open');document.body.classList.remove('chat-open');document.body.style.overflow=''},{once:!0})}}f.addEventListener('click',j);window.addEventListener('resize',()=>{if(h){var D=document.getElementById('chat-body');D&&(D.style.height=_()?'calc(100% - 120px)':`calc(100% - clamp(120px, 25vh, 140px))`)}});function k(){c.info('Loading chat interface...');fetch('http://localhost:3000/api/chat/init',{method:'GET',credentials:'include'}).then(_A=>(c.info('Chat init API response received'),_A.json())).then(E=>{g.innerHTML=`
          <div id="chat-header">
            <span>Chat</span>
            <button class="close-button" aria-label="Close chat">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
              </svg>
            </button>
          </div>
          <div id="chat-body"></div>
          <div id="chat-footer">
            <input type="text" id="chat-input" placeholder="Type a message..." />
            <button id="voice-button" title="Voice Input">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path>
                <path d="M19 10v2a7 7 0 0 1-14 0v-2"></path>
                <line x1="12" y1="19" x2="12" y2="23"></line>
                <line x1="8" y1="23" x2="16" y2="23"></line>
              </svg>
            </button>
            <button id="send-message">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="22" y1="2" x2="11" y2="13"></line>
                <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
              </svg>
            </button>
          </div>
        `;var _b=g.querySelector('.close-button');_b.addEventListener('click',e=>{e.stopPropagation();j()});E.messages&&bG(E.messages)?E.messages.forEach(aA=>l(aA)):l({type:'text',content:'Hi! How can I help you today?'});r();c.info('Chat interface loaded and initialized')}).catch(aB=>{c.error('Error loading chat interface:',aB);g.innerHTML=`
          <div class="error-state" style="padding:20px; text-align:center; color:#ff4757;">
            <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="12" y1="8" x2="12" y2="12"></line>
              <line x1="12" y1="16" x2="12.01" y2="16"></line>
            </svg>
            <p>Unable to load chat. Please try again later.</p>
          </div>
        `})}function l(aC){var _B=document.getElementById('chat-body'),_c=document.createElement('div');_c.className='message server-message';switch(aC.type) {case 'text':_c.innerHTML=`
            <div class="message-content">
              ${aC.content}
            </div>
          `;break;case 'product':var _d=aC.originalPrice?Math.round(((aC.originalPrice-aC.price)/aC.originalPrice)*100):0;var _e=aC.rating?m(aC.rating):'';_c.innerHTML=`
            <div class="product-card">
              <div class="product-image-container">
                <img src="${aC.imageUrl}" alt="${aC.title}" loading="lazy" />
                ${_d>0?`<div class="discount-badge">-${_d}%</div>`:''}
              </div>
              <div class="product-details">
                <h4>${aC.title}</h4>
                <div class="product-rating">${_e}</div>
                <p>${aC.description}</p>
                <div class="product-price">
                  <strong>${n(aC.price)}</strong>
                  ${aC.originalPrice?`<span class="original-price">${n(aC.originalPrice)}</span>`:''}
                </div>
                ${aC.shipping?`<div class="shipping-info">${aC.shipping}</div>`:''}
                ${aC.inStock===!1?`<div class="out-of-stock">Out of Stock</div>`:''}
              </div>
              <div class="product-actions">
                ${aC.actions.map(aD=>`
                  ${aD.url?`<a href="${aD.url}" class="product-action-button" data-action="${aD.value}">${aD.label}</a>`:`<button class="product-action-button" data-action="${aD.value}">${aD.label}</button>`}
                `).join('')}
              </div>
            </div>
          `;break;case 'action':_c.innerHTML=`
          <div class="message-content">
            <p>${aC.question}</p>
            <div class="action-buttons">
              ${aC.options.map(aE=>`<button class="action-button" data-action="${aE.value}">${aE.label}</button>`).join('')}
            </div>
          </div>
        `;break;case 'image':_c.innerHTML=`
          <div class="message-content">
            <img src="${aC.imageUrl}" alt="Image message" style="max-width:100%; border-radius:8px;" />
            ${aC.caption?`<p>${aC.caption}</p>`:''}
          </div>
        `;break;default:_c.innerHTML=`<div class="message-content">Unknown message type.</div>`}_B.appendChild(_c);_B.scrollTop=_B.scrollHeight;var F=_c.querySelectorAll('.action-button, .product-action-button:not(a)');for(const aF of F)aF.addEventListener('click',()=>{var aG=aF.getAttribute('data-action');c.info('Action button clicked:',aG);q({action:aG})})}function m(aH){var aI=Math.round(aH*2)/2;let _C='';for(let i=1;i<=~~aI;i++)_C+='<span class="star full">★</span>';aI%1!==0&&(_C+='<span class="star half">★</span>');var _D=5-Math.ceil(aI);for(let i=0;i<_D;i++)_C+='<span class="star empty">☆</span>';return`<div class="stars">${_C}</div><span class="rating-value">${aH.toFixed(1)}</span>`}function n(aJ){return`$${aJ.toFixed(2)}`}var o=`
  /* Product Card Enhancements */
  .product-card {
    border: 1px solid #e1e1e1;
    border-radius: 16px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background: #fff;
    width: 100%;
    margin-bottom: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
  
  .product-card:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }
  
  .product-image-container {
    position: relative;
    width: 100%;
  }
  
  .product-card img {
    width: 100%;
    height: auto;
    max-height: 200px;
    object-fit: cover;
    border-bottom: 1px solid #f0f0f0;
  }
  
  @media (max-width: 767px) {
    .product-card img {
      max-height: 180px;
    }
  }
  
  .discount-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background: #e74c3c;
    color: white;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: bold;
  }
  
  .product-details {
    padding: 12px;
  }
  
  .product-details h4 {
    margin: 0 0 8px 0;
    font-size: 16px;
    color: #333;
  }
  
  .product-details p {
    margin: 8px 0;
    color: #666;
    font-size: 14px;
    line-height: 1.4;
  }
  
  .product-rating {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
  }
  
  .stars {
    display: inline-flex;
    margin-right: 6px;
  }
  
  .star {
    color: #f39c12;
    font-size: 14px;
  }
  
  .star.empty {
    color: #e1e1e1;
  }
  
  .star.half {
    position: relative;
    color: #e1e1e1;
  }
  
  .star.half:before {
    content: '★';
    position: absolute;
    color: #f39c12;
    width: 50%;
    overflow: hidden;
  }
  
  .rating-value {
    font-size: 14px;
    color: #666;
  }
  
  .product-price {
    display: flex;
    align-items: center;
    margin: 10px 0;
  }
  
  .product-price strong {
    font-size: 18px;
    color: #2ecc71;
    margin-right: 8px;
  }
  
  .original-price {
    text-decoration: line-through;
    color: #999;
    font-size: 14px;
  }
  
  .shipping-info {
    font-size: 12px;
    color: #3498db;
    margin-top: 4px;
  }
  
  .out-of-stock {
    display: inline-block;
    padding: 2px 6px;
    background: #f1f1f1;
    color: #e74c3c;
    font-size: 12px;
    border-radius: 4px;
    margin-top: 4px;
  }
  
  .product-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    padding: 8px 12px 16px;
    justify-content: center;
  }
  
  .product-action-button {
    background: #6c5ce7;
    color: white;
    border: none;
    border-radius: 20px;
    padding: 8px 16px;
    cursor: pointer;
    transition: background 0.2s ease, transform 0.1s ease;
    font-size: 14px;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  .product-action-button:hover {
    background: #5b4cc4;
    transform: scale(1.05);
  }
  
  .product-action-button:active {
    transform: scale(0.95);
  }

  /* Special styling for Buy Now button */
  .product-action-button[data-action^="buy_"] {
    background: #2ecc71;
  }
  
  .product-action-button[data-action^="buy_"]:hover {
    background: #27ae60;
  }
  
  /* Different color for View Details button */
  .product-action-button[data-action^="details_"] {
    background: #3498db;
  }
  
  .product-action-button[data-action^="details_"]:hover {
    background: #2980b9;
  }
  
  @media (max-width: 767px) {
    .product-actions {
      flex-direction: column;
    }
    
    .product-action-button {
      width: 100%;
    }
  }
`;function p(){var aK=document.createElement('style');aK.textContent=o;document.head.appendChild(aK)}function q(aL){c.info('Sending message payload to server:',aL);fetch('http://localhost:3000/api/chat/message',{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'},body:JSON.stringify(aL)}).then(aM=>(c.info('Server response received'),aM.json())).then(aN=>{c.info('Processing server response:',aN);var aO=document.getElementById('chat-body');(aN.messages&&bG(aN.messages));aO.scrollTop=aO.scrollHeight}).catch(aP=>{c.error('Error in server communication:',aP);var aQ=document.getElementById('chat-body');l({type:'text',content:'Sorry, I couldn\'t process your message. Please try again.'});aQ.scrollTop=aQ.scrollHeight})}function r(){var aR=document.getElementById('send-message'),aS=document.getElementById('voice-button'),aT=document.getElementById('chat-input'),aU=document.getElementById('chat-body');c.info('Setting up chat messaging components');let _E=!1;let _f=null;function G(aV){return aV.replace(/[<>]/g,'').trim()}function H(){var aW=G(aT.value);if(aW==='')return;c.info('Sending message:',aW);I(aW);aT.value='';aU.scrollTop=aU.scrollHeight;q({message:aW})}function I(aX){var aY=document.createElement('div');aY.className='message user-message';aY.innerHTML=`<div class="message-content">${aX}</div>`;aU.appendChild(aY);c.info('User message appended to chat')}aR.addEventListener('click',H);aT.addEventListener('keyup',function(aZ){(aZ.key==='Enter'&&!aZ.shiftKey)&&(aZ.preventDefault(),H())});aS.addEventListener('click',function(){if(!('webkitSpeechRecognition' in window)&&!('SpeechRecognition' in window)){c.warn('Speech recognition not supported in this browser');alert('Voice recognition is not supported in your browser.');return}if(_E){c.info('Stopping voice recording');_f?.stop();return}var bA=window.SpeechRecognition||window.webkitSpeechRecognition;_f=new bA;_f.continuous=!1;_f.interimResults=!0;_f.lang='en-US';_f.onstart=()=>{c.info('Voice recognition started');_E=!0;aS.classList.add('recording')};_f.onend=()=>{c.info('Voice recognition ended');_E=!1;aS.classList.remove('recording');_f=null};_f.onerror=bB=>{c.error('Voice recognition error:',bB.error);_E=!1;aS.classList.remove('recording');_f=null};_f.onresult=bC=>{var bD=[...bC.results].map(bE=>bE[0].transcript).join('');c.info('Voice recognition result:',bD);aT.value=bD;bC.results[0].isFinal&&H()};try{_f.start();c.info('Attempting to start voice recognition')}catch(bF){c.error('Error starting voice recognition:',bF);alert('Error starting voice recognition. Please try again.')}});aT.focus();c.info('Chat messaging setup completed')}p();c.info('Chat widget initialized')})();
